/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;
        int sum = 0;
        int fact = 1;
        ListNode *l3 = new ListNode(0);
        ListNode *curr = l3;
        while(l1 != nullptr && l2 != nullptr) {
            sum = (l1->val + l2->val + carry);
            carry = 0;
            if(sum >= 10) {
                carry = sum / 10;
                sum = sum % 10;
            }
            ListNode* temp = new ListNode(sum);
            curr->next = temp;
            curr = temp;
            l1 = l1->next;
            l2 = l2->next;
        }
        while(l1 != nullptr) {
            l1->val = l1->val + carry;
            carry = 0;
            if(l1->val >= 10) {
                carry = l1->val / 10;
                l1->val = l1->val % 10;
            }
            curr->next = l1;
            curr = l1;
            l1 = l1->next;  
        }
        while(l2 != nullptr) {
            l2->val = l2->val + carry;
            carry = 0;
            if(l2->val >= 10) {
                carry = l2->val / 10;
                l2->val = l2->val % 10;
            }
            curr->next = l2;
            curr = l2;
            l2 = l2->next;
        }
        if(carry != 0) {
            ListNode* temp = new ListNode(carry);
            curr->next = temp;
        }
        return l3->next;
    }
};
